{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sristichowdhury/Desktop/stack-hack/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [myImg, setmyImg] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [user, setUser] = useState({\n    name: '',\n    imagePath: '',\n    userId: ''\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('myImg', myImg);\n    await fetch(\"http://localhost:5000/uploadForm\", {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(res => {\n      setResponse(res.message);\n      console.log(res.data.image);\n      setUser({\n        name: res.data.name,\n        imagePath: res.data.image,\n        userId: res.data.id\n      });\n      user.imagePath = user.imagePath.replace(\"public/\", \"\");\n      user.imagePath = \"http://localhost:5000/\" + user.imagePath;\n      setUser({\n        imagePath: user\n      });\n    }).catch(err => setErrMsg(err.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".png,.jpeg\",\n        name: \"myImg\",\n        onChange: e => setmyImg(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 6\n    }, this), response != '' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: response\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: user.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 6\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `http://localhost:5000/${user.imagePath}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 6\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"07pSQ3jPWtHVlyngPTNQ1Z0bTJc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/stack-hack/client/src/App.js"],"names":["useState","axios","App","name","setName","myImg","setmyImg","response","setResponse","errMsg","setErrMsg","user","setUser","imagePath","userId","handleSubmit","e","preventDefault","formData","FormData","append","fetch","method","body","then","res","json","message","console","log","data","image","id","replace","catch","err","target","files","value"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport {useState} from 'react';\nimport './App.css';\nimport axios from 'axios'\n\nfunction App() {\n\n  const [name,setName]=useState(\"\");\n  const [myImg,setmyImg]=useState(\"\");\n  const [response,setResponse]=useState(\"\");\n  const [errMsg,setErrMsg]=useState(\"\");\n\n\n  const [user,setUser]=useState({name:'',imagePath:'',userId:''})\n\n  const handleSubmit = async (e) =>\n  {\n    e.preventDefault();\n    const formData= new FormData();\n    formData.append('name',name);\n    formData.append('myImg',myImg);\n    await fetch(\"http://localhost:5000/uploadForm\",\n    {\n      method:'POST',\n      body:formData\n    })\n    .then(res=>res.json())\n    .then(res=>{\n      setResponse(res.message)\n      console.log(res.data.image)\n      setUser(\n        {\n          name:res.data.name,\n          imagePath:res.data.image,\n          userId:res.data.id\n        \n        })\n\n        user.imagePath = user.imagePath.replace(\"public/\", \"\");\n        user.imagePath=\"http://localhost:5000/\"+user.imagePath;\n        setUser({imagePath:user})\n      })\n    .catch(err=>setErrMsg(err.message))\n\n  }\n\n\n \n\n  return (\n    <div>\n     <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n       <input type=\"file\" accept=\".png,.jpeg\" name=\"myImg\" onChange={e=>setmyImg(e.target.files[0])}></input>\n       <input type=\"text\" placeholder=\"Enter your name\" onChange={e=>setName(e.target.value)}></input>\n       <button type=\"submit\">Submit</button>\n     </form>\n     {response!=''?\n     <div>\n     <h1>{response}</h1>\n     <h2>{user.name}</h2>\n     <img src={`http://localhost:5000/${user.imagePath}`}/>\n     </div>\n     :<h1>{errMsg}</h1>}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}