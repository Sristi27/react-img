{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/sristichowdhury/Desktop/stack-hack/client/src/App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport { useState } from 'react';\nimport './App.css';\nimport axios from 'axios';\n\nconst success = user => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: userresponse\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: user.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n\nfunction App() {\n  _s();\n\n  const [name, setName] = useState(\"\");\n  const [myImg, setmyImg] = useState(\"\");\n  const [response, setResponse] = useState(\"\");\n  const [errMsg, setErrMsg] = useState(\"\");\n  const [user, setUser] = useState({\n    name: '',\n    imagePath: '',\n    userId: ''\n  });\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('myImg', myImg);\n    await fetch(\"http://localhost:5000/uploadForm\", {\n      method: 'POST',\n      body: formData\n    }).then(res => res.json()).then(res => {\n      setResponse(res.message);\n      setUser({\n        name: res.data.name,\n        imagePath: res.data.image,\n        userId: res.data.id\n      });\n    }).catch(err => setErrMsg(err.message));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      encType: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".png,.jpeg\",\n        name: \"myImg\",\n        onChange: e => setmyImg(e.target.files[0])\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Enter your name\",\n        onChange: e => setName(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 8\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 8\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }, this), response != '' ? /*#__PURE__*/_jsxDEV(\"success\", {\n      user: user\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: errMsg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"07pSQ3jPWtHVlyngPTNQ1Z0bTJc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/sristichowdhury/Desktop/stack-hack/client/src/App.js"],"names":["useState","axios","success","user","userresponse","name","App","setName","myImg","setmyImg","response","setResponse","errMsg","setErrMsg","setUser","imagePath","userId","handleSubmit","e","preventDefault","formData","FormData","append","fetch","method","body","then","res","json","message","data","image","id","catch","err","target","files","value"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport {useState} from 'react';\nimport './App.css';\nimport axios from 'axios'\n\n\n\nconst success = (user) =>\n{\n   return (\n    <div>\n    <h1>{userresponse}</h1>\n    <h2>{user.name}</h2>\n    </div>\n   )\n}\n\nfunction App() {\n\n  const [name,setName]=useState(\"\");\n  const [myImg,setmyImg]=useState(\"\");\n  const [response,setResponse]=useState(\"\");\n  const [errMsg,setErrMsg]=useState(\"\");\n\n\n  const [user,setUser]=useState({name:'',imagePath:'',userId:''})\n\n  const handleSubmit = async (e) =>\n  {\n    e.preventDefault();\n    const formData= new FormData();\n    formData.append('name',name);\n    formData.append('myImg',myImg);\n    await fetch(\"http://localhost:5000/uploadForm\",\n    {\n      method:'POST',\n      body:formData\n    })\n    .then(res=>res.json())\n    .then(res=>{\n      setResponse(res.message)\n      setUser(\n        {\n          name:res.data.name,\n          imagePath:res.data.image,\n          userId:res.data.id\n        })\n      })\n    .catch(err=>setErrMsg(err.message))\n\n  }\n\n\n \n\n  return (\n    <div>\n     <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n       <input type=\"file\" accept=\".png,.jpeg\" name=\"myImg\" onChange={e=>setmyImg(e.target.files[0])}></input>\n       <input type=\"text\" placeholder=\"Enter your name\" onChange={e=>setName(e.target.value)}></input>\n       <button type=\"submit\">Submit</button>\n     </form>\n     {response!=''?<success user={user}/>:<h1>{errMsg}</h1>}\n\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}