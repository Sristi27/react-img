{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","setName","myImg","setmyImg","response","setResponse","errMsg","setErrMsg","userName","setUserName","userImg","setUserImg","setID","handleSubmit","e","a","preventDefault","formData","FormData","append","fetch","method","body","then","res","json","message","data","_id","console","log","image","replace","catch","err","onSubmit","encType","type","accept","onChange","target","files","placeholder","value","src","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOAAe,I,YCgEAA,MA3Df,WAAgB,IAAD,EAEQC,mBAAS,IAFjB,mBAENC,EAFM,KAEDC,EAFC,OAGUF,mBAAS,IAHnB,mBAGNG,EAHM,KAGAC,EAHA,OAIgBJ,mBAAS,IAJzB,mBAINK,EAJM,KAIGC,EAJH,OAKYN,mBAAS,IALrB,mBAKNO,EALM,KAKCC,EALD,OAQgBR,mBAAS,IARzB,mBAQNS,EARM,KAQGC,EARH,OAScV,mBAAS,IATvB,mBASNW,EATM,KASEC,EATF,OAUGZ,mBAAS,IAVZ,mBAUJa,GAVI,WAWPC,EAAY,uCAAG,WAAOC,GAAP,eAAAC,EAAA,6DAEnBD,EAAEE,kBACIC,EAAU,IAAIC,UACXC,OAAO,OAAOnB,GACvBiB,EAASE,OAAO,QAAQjB,GALL,SAMbkB,MAAM,mCACZ,CACEC,OAAO,OACPC,KAAKL,IAENM,MAAK,SAAAC,GAAG,OAAEA,EAAIC,UACdF,MAAK,SAAAC,GACJnB,EAAYmB,EAAIE,SAChBd,EAAMY,EAAIG,KAAKC,KACfC,QAAQC,IAAIN,GACZb,EAAW,yBAA0Ba,EAAIG,KAAKI,MAAMC,QAAQ,UAAW,KACvEvB,EAAYe,EAAIG,KAAK3B,SAEtBiC,OAAM,SAAAC,GAAG,OAAE3B,EAAU2B,EAAIR,YAnBP,2CAAH,sDA0BlB,OACE,gCACC,uBAAMS,SAAUtB,EAAcuB,QAAQ,sBAAtC,UACE,uBAAOC,KAAK,OAAOC,OAAO,aAAatC,KAAK,QAAQuC,SAAU,SAAAzB,GAAC,OAAEX,EAASW,EAAE0B,OAAOC,MAAM,OACzF,uBAAOJ,KAAK,OAAOK,YAAY,kBAAkBH,SAAU,SAAAzB,GAAC,OAAEb,EAAQa,EAAE0B,OAAOG,UAC/E,wBAAQN,KAAK,SAAb,uBAES,IAAVjC,EACD,gCACA,6BAAKA,IACL,6BAAKI,IACL,qBAAKoC,IAAKlC,OAET,6BAAKJ,QC3CIuC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.dc11cd00.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport {useState} from 'react';\nimport './App.css';\nimport axios from 'axios'\n\nfunction App() {\n\n  const [name,setName]=useState(\"\");\n  const [myImg,setmyImg]=useState(\"\");\n  const [response,setResponse]=useState(\"\");\n  const [errMsg,setErrMsg]=useState(\"\");\n\n\n  const [userName,setUserName]=useState('')\n  const [userImg,setUserImg]=useState('')\n const [id,setID]=useState('')\n  const handleSubmit = async (e) =>\n  {\n    e.preventDefault();\n    const formData= new FormData();\n    formData.append('name',name);\n    formData.append('myImg',myImg);\n    await fetch(\"http://localhost:5000/uploadForm\",\n    {\n      method:'POST',\n      body:formData\n    })\n    .then(res=>res.json())\n    .then(res=>{\n      setResponse(res.message)\n      setID(res.data._id)\n      console.log(res)\n      setUserImg(\"http://localhost:5000/\"+ res.data.image.replace(\"public/\", \"\"));\n      setUserName(res.data.name)\n      })\n    .catch(err=>setErrMsg(err.message))\n    \n    }\n    \n\n\n\n  return (\n    <div>\n     <form onSubmit={handleSubmit} encType=\"multipart/form-data\">\n       <input type=\"file\" accept=\".png,.jpeg\" name=\"myImg\" onChange={e=>setmyImg(e.target.files[0])}></input>\n       <input type=\"text\" placeholder=\"Enter your name\" onChange={e=>setName(e.target.value)}></input>\n       <button type=\"submit\">Submit</button>\n     </form>\n     {response!=''?\n     <div>\n     <h1>{response}</h1>\n     <h2>{userName}</h2>\n     <img src={userImg}/>\n     </div>\n     :<h1>{errMsg}</h1>}\n     \n    </div>\n  );\n}\n\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}